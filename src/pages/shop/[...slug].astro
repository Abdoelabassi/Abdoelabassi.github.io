---
// src/pages/product/[...slug].astro
import Layout from '../../layouts/Layout.astro';
import { getCollection, render } from 'astro:content';

export async function getStaticPaths() {
  const products = await getCollection('product');
  return products.map(product => ({
    params: { slug: product.slug },
    props: { product }
  }));
}

const { product } = Astro.props;
const { Content } = await render(product);

// Get related products (same category or random)
const allProducts = await getCollection('product');
const relatedProducts = allProducts
  .filter(p => p.slug !== product.slug && p.data.category === product.data.category)
  .slice(0, 3);

if (relatedProducts.length < 3) {
  const remaining = allProducts
    .filter(p => p.slug !== product.slug && !relatedProducts.includes(p))
    .slice(0, 3 - relatedProducts.length);
  relatedProducts.push(...remaining);
}
---

<Layout title={`${product.data.title} - Shop`}>
  <main class="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
    <!-- Breadcrumb -->
    <nav class="bg-white/50 backdrop-blur-sm border-b border-gray-200">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
        <div class="flex items-center space-x-2 text-sm">
          <a href="/" class="text-blue-600 hover:text-blue-800 transition-colors">Home</a>
          <svg class="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
          </svg>
          {product.data.category && (
            <>
              <span class="text-gray-600">{product.data.category}</span>
              <svg class="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
              </svg>
            </>
          )}
          <span class="text-gray-900 font-medium">{product.data.title}</span>
        </div>
      </div>
    </nav>

    <!-- Product Details -->
    <section class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-start">
        <!-- Product Image -->
        <div class="space-y-4">
          <div class="relative overflow-hidden rounded-2xl bg-white shadow-lg border border-gray-200">
            {product.data.image ? (
              <img 
                src={product.data.image} 
                alt={product.data.title}
                class="w-full aspect-square object-cover hover:scale-105 transition-transform duration-700"
              />
            ) : (
              <div class="w-full aspect-square flex items-center justify-center bg-gradient-to-br from-gray-100 to-gray-200">
                <svg class="w-24 h-24 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M4 4h16v16H4V4zm2 2v12h12V6H6zm2 2h8v2H8V8zm0 4h6v2H8v-2z"/>
                </svg>
              </div>
            )}
          </div>
          
          <!-- Additional Images Placeholder -->
          {product.data.gallery && (
            <div class="grid grid-cols-4 gap-2">
              {product.data.gallery.map((img, index) => (
                <div class="aspect-square rounded-lg overflow-hidden bg-gray-100 border border-gray-200 hover:border-blue-300 transition-colors cursor-pointer">
                  <img src={img} alt={`${product.data.title} ${index + 1}`} class="w-full h-full object-cover" />
                </div>
              ))}
            </div>
          )}
        </div>

        <!-- Product Info -->
        <div class="space-y-8">
          <div>
            {product.data.category && (
              <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 mb-4">
                {product.data.category}
              </span>
            )}
            <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4 leading-tight">
              {product.data.title}
            </h1>
            {product.data.description && (
              <p class="text-xl text-gray-600 leading-relaxed">
                {product.data.description}
              </p>
            )}
          </div>

          <!-- Price -->
          {product.data.price && (
            <div class="flex items-center gap-4">
              {product.data.originalPrice && (
                <span class="text-2xl text-gray-400 line-through">
                  ${product.data.originalPrice}
                </span>
              )}
              <span class="text-4xl font-bold text-gray-900">
                ${product.data.price}
              </span>
              {product.data.originalPrice && (
                <span class="bg-red-100 text-red-800 text-sm font-medium px-3 py-1 rounded-full">
                  Save ${(product.data.originalPrice - product.data.price).toFixed(2)}
                </span>
              )}
            </div>
          )}

          <!-- Features -->
          {product.data.features && (
            <div class="space-y-3">
              <h3 class="text-lg font-semibold text-gray-900">Key Features</h3>
              <ul class="space-y-2">
                {product.data.features.map(feature => (
                  <li class="flex items-start gap-3">
                    <svg class="w-5 h-5 text-green-500 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                    </svg>
                    <span class="text-gray-700">{feature}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}

          <!-- Actions -->
          <div class="space-y-4">
            <div class="flex flex-col sm:flex-row gap-4">
              <button class="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-bold py-4 px-8 rounded-xl transition-all duration-300 hover:scale-105 transform hover:shadow-lg">
                Add to Cart
              </button>
              <button class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-900 font-bold py-4 px-8 rounded-xl transition-all duration-300 hover:scale-105 transform border border-gray-300">
                Add to Wishlist
              </button>
            </div>
            
            <div class="flex items-center justify-center gap-6 pt-4 border-t border-gray-200">
              <div class="flex items-center gap-2 text-sm text-gray-600">
                <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                </svg>
                Free Shipping
              </div>
              <div class="flex items-center gap-2 text-sm text-gray-600">
                <svg class="w-5 h-5 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"/>
                </svg>
                30-Day Returns
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Product Content -->
    {Content && (
      <section class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
        <article class="prose prose-lg max-w-none bg-white rounded-2xl p-8 shadow-sm border border-gray-200">
          <Content />
        </article>
      </section>
    )}

    <!-- Related Products -->
    {relatedProducts.length > 0 && (
      <section class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
        <div class="mb-8">
          <h2 class="text-3xl font-bold text-gray-900 mb-4">Related Products</h2>
          <p class="text-lg text-gray-600">You might also like these items</p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {relatedProducts.map((relatedProduct) => (
            <article class="group bg-white rounded-2xl shadow-sm hover:shadow-2xl transition-all duration-500 overflow-hidden border border-gray-100 hover:border-blue-200">
              <div class="relative overflow-hidden bg-gray-100 aspect-square">
                {relatedProduct.data.image ? (
                  <img 
                    src={relatedProduct.data.image} 
                    alt={relatedProduct.data.title}
                    class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-700"
                    loading="lazy"
                  />
                ) : (
                  <div class="w-full h-full flex items-center justify-center bg-gradient-to-br from-gray-100 to-gray-200">
                    <svg class="w-16 h-16 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M4 4h16v16H4V4zm2 2v12h12V6H6zm2 2h8v2H8V8zm0 4h6v2H8v-2z"/>
                    </svg>
                  </div>
                )}
              </div>

              <div class="p-6">
                <h3 class="font-bold text-lg text-gray-900 group-hover:text-blue-600 transition-colors duration-300 mb-2 line-clamp-2">
                  {relatedProduct.data.title}
                </h3>
                
                <div class="flex items-center justify-between">
                  {relatedProduct.data.price && (
                    <span class="text-xl font-bold text-gray-900">
                      ${relatedProduct.data.price}
                    </span>
                  )}
                  
                  <a 
                    href={`/shop/${relatedProduct.slug}`}
                    class="inline-flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-300"
                  >
                    View
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                    </svg>
                  </a>
                </div>
              </div>
            </article>
          ))}
        </div>
      </section>
    )}
  </main>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .prose {
    color: #374151;
  }
  
  .prose h1, .prose h2, .prose h3, .prose h4 {
    color: #111827;
    font-weight: 700;
  }
  
  .prose a {
    color: #2563eb;
    text-decoration: none;
  }
  
  .prose a:hover {
    color: #1d4ed8;
    text-decoration: underline;
  }
</style>